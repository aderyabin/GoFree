// Generated by CoffeeScript 1.4.0
var SERPTripsSelected;

SERPTripsSelected = Backbone.Collection.extend({
  _searchHash: null,
  _observing: false,
  _tripHash: null,
  model: app.models.SERPTripSelected,
  initialize: function() {
    this.on('add', this.instantiateCollections, this);
    return app.log('[app.collections.SERPTripsSelected]: initialize');
  },
  observe: function() {
    this._observing = true;
    return app.socket.on('search_started', _.bind(this.fetched, this));
  },
  setHash: function(_searchHash) {
    this._searchHash = _searchHash;
    return this;
  },
  fetched: function(resp) {
    var data;
    if (resp.form.hash !== this._searchHash) {
      return;
    }
    data = resp.trips;
    this.add(resp.trips);
    this.trigger('fetched', data);
    return app.log('[app.collections.SERPTripsSelected]: fetched', data);
  },
  instantiateCollections: function(model) {
    if (this._observing) {
      return model.observe();
    }
  },
  _dump: function(json) {
    var item, _i, _len, _ref, _ref1;
    for (_i = 0, _len = json.length; _i < _len; _i++) {
      item = json[_i];
      item.hotel = (_ref = item.hotel) != null ? _ref.toJSON() : void 0;
      item.flight = (_ref1 = item.flight) != null ? _ref1.toJSON() : void 0;
    }
    return json;
  },
  serialize: function() {
    return this._dump(this.toJSON());
  },
  save: function() {
    var data;
    data = this.serialize();
    this._tripHash = data['hash'] = md5(JSON.stringify(data));
    app.socket.emit('serp_selected', {
      trip_hash: this._tripHash,
      search_hash: this._searchHash,
      items: data
    });
    this.trigger('save', data);
    app.log('[app.models.SERPTripSelected]: save', data);
    return this._tripHash;
  }
});

app.collections.SERPTripsSelected = SERPTripsSelected;
