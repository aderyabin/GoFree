// Generated by CoffeeScript 1.4.0
var Search;

Search = Backbone.Model.extend({
  defaults: {
    adults: 1,
    budget: 100000,
    trips: null,
    hash: null
  },
  initialize: function() {
    return app.log('[app.models.Search]: initialize');
  },
  observe: function() {
    app.socket.on('search_started', _.bind(this.fetched, this));
    return app.log('[app.models.Search]: observing');
  },
  setHash: function(hash) {
    this.set('hash', hash);
    return this;
  },
  fetched: function(resp) {
    var data;
    if (resp.form.hash !== this.get('hash')) {
      return;
    }
    data = resp.form;
    this.set({
      adults: data.adults,
      budget: data.budget,
      trips: this.get('trips').reset(data.trips)
    });
    app.log('[app.models.Search]: fetched', data);
    return this.trigger('fetched', data);
  },
  isValid: function() {
    var iterator, valid,
      _this = this;
    valid = true;
    iterator = function(item) {
      return valid = item.get('place').name;
    };
    this.get('trips').each(iterator);
    return !!valid;
  },
  serialize: function() {
    return _.extend(this.toJSON(), {
      trips: this.get('trips').toJSON()
    });
  },
  preSave: function() {
    var data;
    data = this.serialize();
    this.set('hash', data['hash'] = md5(JSON.stringify(data)));
    app.socket.emit('pre_search', data);
    this.trigger('pre_save', data);
    return app.log('[app.models.Search]: pre_save', data);
  },
  save: function() {
    var data;
    data = this.serialize();
    this.set('hash', data['hash'] = md5(JSON.stringify(data)));
    app.socket.emit('search', data);
    this.trigger('save', data);
    return app.log('[app.models.Search]: save', data);
  },
  destroy: function() {
    app.socket.removeAllListeners('search_started');
    this.clear();
    return app.log('[app.models.Search]: destroyed');
  }
});

app.models.Search = Search;
