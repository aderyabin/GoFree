// Generated by CoffeeScript 1.4.0
var Index;

Index = Backbone.View.extend({
  el: '#l-content',
  initialize: function() {
    this.render();
    this.searchPart = this.$el.find('#part-search');
    this.serpPart = this.$el.find('#part-serp');
    this.searchForm = this.searchPart.find('.p-s-formwrap');
    this.bg = this.searchPart.find('.p-s-bg-img');
    this.preloader = $('<img/>');
    this.collection = this.model.get('trips');
    this.updatePageHeight();
    this.searchFormView = new app.views.SearchForm({
      el: this.searchForm,
      model: this.model,
      collection: this.collection
    });
    this.show();
    app.on('resize', this.updatePageHeight, this);
    this.collection.on('change:place', this.placeChanged, this);
    this.preloader.on('load', _.bind(this.updateBG, this));
    this.model.on('save', this.showSERP, this);
    return app.log('[app.views.Index]: initialize');
  },
  showSERP: function(data) {
    var _this = this;
    this.serpPart.css({
      'min-height': app.size.height,
      display: 'block'
    });
    return app.utils.scroll(app.size.height, 300, function() {
      app.router.navigate('search/' + data.hash, {
        trigger: true
      });
      return _this.searchPart.hide();
    });
  },
  render: function() {
    if (this.$el.find('#part-search').length) {
      return;
    }
    return this.$el.html(app.templates.index());
  },
  show: function() {
    this.searchForm.hide();
    this.serpPart.hide();
    return this.searchForm.fadeIn(500);
  },
  updatePageHeight: function() {
    return this.searchPart.css({
      'min-height': app.size.height
    });
  },
  updateBG: function(e) {
    var _this = this;
    return this.bg.fadeOut(200, function() {
      _this.bg.attr('src', e.target.src);
      return _this.bg.fadeIn(200);
    });
  },
  placeChanged: function(model, place) {
    var _this = this;
    return $.ajax({
      url: "" + app.api.images + place.country_code + "/" + place.name,
      success: function(resp) {
        if (resp && resp.value) {
          return _this.preloader.attr('src', resp.value.blured);
        }
      }
    });
  },
  destroy: function() {
    this.undelegateEvents();
    if (this.searchFormView) {
      this.searchFormView.destroy();
      delete this.searchFormView;
    }
    app.off('resize', this.updatePageHeight, this);
    this.collection.off('change:place', this.placeChanged, this);
    this.preloader.off('load', _.bind(this.updateBG, this));
    this.model.off('save', this.showSERP, this);
    delete this.collection;
    delete this.preloader;
    delete this.model;
    return app.log('[app.views.Index]: destroy');
  }
});

app.views.Index = Index;
