// Generated by CoffeeScript 1.4.0
var Index;

Index = Backbone.View.extend({
  el: '#l-content',
  initialize: function() {
    this.searchPart = this.$el.find('#part-search');
    this.serpPart = this.$el.find('#part-serp');
    this.bg = this.searchPart.find('.p-i-bg-img');
    this.preloader = $('<img/>');
    this.collection = this.model.get('trips');
    this.updatePageHeight();
    if (app.router.history.length) {
      this.showForm();
    } else {
      this.render();
    }
    this.searchFormView = new app.views.SearchForm({
      el: this.searchPart.find('.block-form')[0],
      model: this.model,
      collection: this.collection
    });
    app.dom.win.on('resize', _.bind(this.updatePageHeight, this));
    this.collection.on('change:place', this.placeChanged, this);
    this.preloader.on('load', _.bind(this.updateBG, this));
    this.model.on('save', this.showSERP, this);
    return app.log('[app.views.Index]: initialize');
  },
  updatePageHeight: function() {
    return this.searchPart.css({
      'min-height': app.dom.win.height()
    });
  },
  updateBG: function(e) {
    var _this = this;
    return this.bg.fadeOut(200, function() {
      _this.bg.attr('src', e.target.src);
      return _this.bg.fadeIn(200);
    });
  },
  placeChanged: function(model, place) {
    var _this = this;
    return $.ajax({
      url: "" + app.api.images + place.country_code + "/" + place.name,
      success: function(resp) {
        if (resp && resp.value) {
          return _this.preloader.attr('src', resp.value.sharp);
        }
      }
    });
  },
  showSERP: function() {
    var height,
      _this = this;
    height = app.dom.win.height();
    this.serpPart.css({
      'min-height': height,
      display: 'block'
    });
    return app.utils.scroll(height, 300, function() {
      return app.router.navigate('search/' + _this.model.get('hash'), {
        trigger: true
      });
    });
  },
  showForm: function() {
    var height,
      _this = this;
    height = app.dom.win.height();
    this.searchPart.show();
    app.utils.scroll(height, 0);
    return app.utils.scroll(0, 300, function() {
      return _this.serpPart.hide();
    });
  },
  render: function() {
    this.searchPart.hide();
    return this.searchPart.fadeIn(500);
  }
});

app.views.Index = Index;
