// Generated by CoffeeScript 1.4.0
(function() {
  var SearchForm;

  SearchForm = Backbone.View.extend({
    stops: {},
    initialize: function() {
      this.render();
      this.stopsEl = this.$el.find('.v-s-destinations');
      this.collection.on('add', this.initStop, this);
      this.collection.on('destroy', this.destroyStop, this);
      this.$el.find('select.m-input-select').m_inputSelect();
      this.today = app.utils.pureDate(app.now);
      this.lastDate = app.utils.pureDate(app.now);
      if (!(this.collection.length > 1)) {
        this.populateCollection();
      }
      app.log('[app.views.SearchForm]: initialize');
      return this;
    },
    events: {
      'click .v-s-d-add': 'addStop',
      'change .m-i-s-select': 'adultsChanged',
      'change .v-s-amount': 'budgetChanged',
      'submit form': 'handleSubmit'
    },
    render: function() {
      return this.$el.html(app.templates.searchform(this.model.toJSON()));
    },
    addStop: function(e) {
      this.lastDate.setDate(this.lastDate.getDate() + 2);
      return this.collection.add({
        date: app.utils.dateToYMD(this.lastDate),
        removable: true
      });
    },
    adultsChanged: function(e) {
      return this.model.set('adults', e.target.value);
    },
    budgetChanged: function(e) {
      return this.model.set('budget', parseInt(e.target.value, 10));
    },
    handleSubmit: function(e) {
      app.e(e);
      return this.model.save();
    },
    populateCollection: function() {
      this.lastDate.setDate(this.lastDate.getDate() + 2);
      return this.collection.add([
        {
          date: app.utils.dateToYMD(this.today),
          removable: false
        }, {
          date: app.utils.dateToYMD(this.lastDate),
          removable: false
        }
      ]);
    },
    initStop: function(item) {
      return this.stops[item.cid] = new app.views.TripsStop({
        list: this.stopsEl,
        model: item
      });
    },
    destroyStop: function(item) {
      if (+app.utils.YMDToDate(item.get('date')) === +this.lastDate) {
        this.lastDate.setDate(this.lastDate.getDate() - 2);
      }
      this.collection.remove(item);
      return delete this.stops[item.cid];
    }
  });

  app.views.SearchForm = SearchForm;

}).call(this);
